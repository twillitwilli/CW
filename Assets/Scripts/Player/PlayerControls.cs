//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Scripts/Player/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""PlayerBasicControls"",
            ""id"": ""76eaa4e9-465a-42d1-a482-18d12dd8da67"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""11367738-a693-4c21-8d48-487faba3df88"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""61c08868-b7fa-4a0e-9868-9cef77251f26"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Blink"",
                    ""type"": ""Button"",
                    ""id"": ""be01f509-6c93-4b43-a386-2281d4560155"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""92aeb12c-594b-4907-b7ed-03e6f3c96123"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseItem"",
                    ""type"": ""Button"",
                    ""id"": ""a67b2d0e-8ecf-499a-a2ad-968f713757e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BasicAttack"",
                    ""type"": ""Button"",
                    ""id"": ""44f64b37-ed68-4984-97a1-77e1b075b6ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KineticForce"",
                    ""type"": ""Button"",
                    ""id"": ""d2261be6-9be9-4b2b-b2da-a40e89bd8828"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fc1577b7-9973-45a7-aa95-a2ce3de591be"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aebac1a1-219b-4794-8139-fbae13f4c889"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c837dabb-3a26-429a-b9f0-f21e5a1c2fb8"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62abd3f9-fa1a-4193-8dc0-6d292c52511f"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""099d976b-bb07-445a-9700-b4a5f8b80b2b"",
                    ""path"": ""<XInputController>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbf5de7f-0edd-4c02-8a64-96e3423bd220"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Blink"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""492fe1aa-dd6a-4927-94b1-a26e0b29a9d1"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Blink"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8869c145-a114-4a46-b32e-f723e702eb83"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7bc9021-35c8-4d8d-8e6d-57f67b24a6e2"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55bb9ed9-3bcc-444d-9bc4-6bc14e3b1b53"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f7f133d-1a2a-41ef-b256-768bb12c4774"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KineticForce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""232a9dbd-96b0-4707-8e8f-220cd978c2dd"",
                    ""path"": ""<XInputController>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KineticForce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e57301da-7492-4280-add1-f9e9b683e825"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BasicAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3fb3983-0707-40e7-8260-e294c2e917c7"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BasicAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerBasicControls
        m_PlayerBasicControls = asset.FindActionMap("PlayerBasicControls", throwIfNotFound: true);
        m_PlayerBasicControls_Movement = m_PlayerBasicControls.FindAction("Movement", throwIfNotFound: true);
        m_PlayerBasicControls_Run = m_PlayerBasicControls.FindAction("Run", throwIfNotFound: true);
        m_PlayerBasicControls_Blink = m_PlayerBasicControls.FindAction("Blink", throwIfNotFound: true);
        m_PlayerBasicControls_Interact = m_PlayerBasicControls.FindAction("Interact", throwIfNotFound: true);
        m_PlayerBasicControls_UseItem = m_PlayerBasicControls.FindAction("UseItem", throwIfNotFound: true);
        m_PlayerBasicControls_BasicAttack = m_PlayerBasicControls.FindAction("BasicAttack", throwIfNotFound: true);
        m_PlayerBasicControls_KineticForce = m_PlayerBasicControls.FindAction("KineticForce", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerBasicControls
    private readonly InputActionMap m_PlayerBasicControls;
    private List<IPlayerBasicControlsActions> m_PlayerBasicControlsActionsCallbackInterfaces = new List<IPlayerBasicControlsActions>();
    private readonly InputAction m_PlayerBasicControls_Movement;
    private readonly InputAction m_PlayerBasicControls_Run;
    private readonly InputAction m_PlayerBasicControls_Blink;
    private readonly InputAction m_PlayerBasicControls_Interact;
    private readonly InputAction m_PlayerBasicControls_UseItem;
    private readonly InputAction m_PlayerBasicControls_BasicAttack;
    private readonly InputAction m_PlayerBasicControls_KineticForce;
    public struct PlayerBasicControlsActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerBasicControlsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerBasicControls_Movement;
        public InputAction @Run => m_Wrapper.m_PlayerBasicControls_Run;
        public InputAction @Blink => m_Wrapper.m_PlayerBasicControls_Blink;
        public InputAction @Interact => m_Wrapper.m_PlayerBasicControls_Interact;
        public InputAction @UseItem => m_Wrapper.m_PlayerBasicControls_UseItem;
        public InputAction @BasicAttack => m_Wrapper.m_PlayerBasicControls_BasicAttack;
        public InputAction @KineticForce => m_Wrapper.m_PlayerBasicControls_KineticForce;
        public InputActionMap Get() { return m_Wrapper.m_PlayerBasicControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerBasicControlsActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerBasicControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerBasicControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerBasicControlsActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Blink.started += instance.OnBlink;
            @Blink.performed += instance.OnBlink;
            @Blink.canceled += instance.OnBlink;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @UseItem.started += instance.OnUseItem;
            @UseItem.performed += instance.OnUseItem;
            @UseItem.canceled += instance.OnUseItem;
            @BasicAttack.started += instance.OnBasicAttack;
            @BasicAttack.performed += instance.OnBasicAttack;
            @BasicAttack.canceled += instance.OnBasicAttack;
            @KineticForce.started += instance.OnKineticForce;
            @KineticForce.performed += instance.OnKineticForce;
            @KineticForce.canceled += instance.OnKineticForce;
        }

        private void UnregisterCallbacks(IPlayerBasicControlsActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Blink.started -= instance.OnBlink;
            @Blink.performed -= instance.OnBlink;
            @Blink.canceled -= instance.OnBlink;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @UseItem.started -= instance.OnUseItem;
            @UseItem.performed -= instance.OnUseItem;
            @UseItem.canceled -= instance.OnUseItem;
            @BasicAttack.started -= instance.OnBasicAttack;
            @BasicAttack.performed -= instance.OnBasicAttack;
            @BasicAttack.canceled -= instance.OnBasicAttack;
            @KineticForce.started -= instance.OnKineticForce;
            @KineticForce.performed -= instance.OnKineticForce;
            @KineticForce.canceled -= instance.OnKineticForce;
        }

        public void RemoveCallbacks(IPlayerBasicControlsActions instance)
        {
            if (m_Wrapper.m_PlayerBasicControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerBasicControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerBasicControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerBasicControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerBasicControlsActions @PlayerBasicControls => new PlayerBasicControlsActions(this);
    public interface IPlayerBasicControlsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnBlink(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnUseItem(InputAction.CallbackContext context);
        void OnBasicAttack(InputAction.CallbackContext context);
        void OnKineticForce(InputAction.CallbackContext context);
    }
}
